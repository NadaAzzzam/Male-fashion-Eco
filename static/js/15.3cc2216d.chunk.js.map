{"version":3,"sources":["components/UI/Buttons.js","views/Auth/SignIn/SignIn.js"],"names":["ColorButton","withStyles","theme","root","padding","borderRadius","letterSpacing","textTransform","color","palette","getContrastText","grey","backgroundColor","Button","useStyles","makeStyles","height","image","backgroundImage","backgroundRepeat","type","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","mb","marginBottom","textForm","width","borderBottomColor","borderColor","submit","textAlign","button","SignIn","classes","container","item","xs","sm","md","className","component","Paper","elevation","square","initialValues","email","password","validate","values","errors","test","length","onSubmit","setSubmitting","console","log","render","submitForm","isSubmitting","touched","variant","TextField","name","label","onClick","disabled"],"mappings":"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","file":"static/js/15.3cc2216d.chunk.js","sourcesContent":["// import React from 'react';\r\nimport { Button, withStyles } from '@material-ui/core';\r\nimport { grey   } from '@material-ui/core/colors';\r\n\r\nexport const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n        padding: '.8rem 2rem',\r\n        borderRadius: 0,\r\n        letterSpacing: '4px',\r\n        textTransform: 'uppercase',\r\n        color: theme.palette.getContrastText(grey[900]),\r\n        backgroundColor: grey[900],\r\n        '&:hover': {\r\n            backgroundColor: grey[800],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport {\r\n    Grid,\r\n    LinearProgress,\r\n    makeStyles,\r\n    Box, Avatar, Typography, Paper\r\n} from '@material-ui/core';\r\nimport {\r\n    TextField\r\n} from 'formik-material-ui';\r\nimport { ColorButton } from '../../../components/UI/Buttons';\r\nimport { LockOutlined } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#111111',\r\n    },\r\n    mb: {\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n    textForm: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        '& label.Mui-focused': {\r\n            color: '#111111',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: '#111111',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: '#111111',\r\n            }\r\n        }\r\n    },\r\n    submit: {\r\n        textAlign: 'center',\r\n\r\n    },\r\n    button: {\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container >\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <Formik className='section'\r\n                    initialValues={{\r\n                        email: '',\r\n                        password: ''\r\n                    }}\r\n                    validate={values => {\r\n                        const errors = {};\r\n                        // email\r\n                        if (!values.email) {\r\n                            errors.email = 'Required';\r\n                        } else if (\r\n                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n                        ) {\r\n                            errors.email = 'Invalid email address';\r\n                        }\r\n\r\n                        // Password\r\n                        if (!values.password) {\r\n                            errors.password = 'Required';\r\n                        } else if (\r\n                            values.password.length < 8\r\n                        ) {\r\n                            errors.password = ' password should at least 8 chars';\r\n                        }\r\n\r\n                        return errors;\r\n                    }}\r\n                    onSubmit={(values, { setSubmitting }) => {\r\n                        console.log(values)\r\n                    }}\r\n                    render={({ submitForm, isSubmitting, touched, errors }) => (\r\n                        <Form className={classes.paper}>\r\n                            <div className={classes.mb}>\r\n                                <Avatar className={classes.avatar}>\r\n                                    <LockOutlined />\r\n                                </Avatar>\r\n                                <Typography component=\"h1\" variant=\"h5\">\r\n                                    Sign up\r\n        </Typography>\r\n                            </div>\r\n\r\n\r\n                            <Grid container >\r\n\r\n                                <Grid item xs={12} >\r\n                                    <Box marginBottom={2}>\r\n                                        <Field\r\n                                            className={classes.textForm}\r\n                                            component={TextField}\r\n                                            variant=\"outlined\"\r\n                                            name=\"email\"\r\n                                            type=\"email\"\r\n                                            label=\"Email\"\r\n                                        />\r\n                                    </Box>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} >\r\n                                    <Box marginBottom={2}>\r\n                                        <Field\r\n                                            className={classes.textForm}\r\n                                            component={TextField}\r\n                                            variant=\"outlined\"\r\n                                            type=\"password\"\r\n                                            label=\"Password\"\r\n                                            name=\"password\"\r\n                                        />\r\n                                    </Box>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} >\r\n                                    {isSubmitting && <LinearProgress />}\r\n                                    <Box className={classes.submit} >\r\n                                        <ColorButton\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            onClick={submitForm}\r\n                                            disabled={isSubmitting}\r\n                                            className={classes.button}\r\n                                        >\r\n                                            Submit\r\n                  </ColorButton>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Form>\r\n\r\n                    )}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}"],"sourceRoot":""}