{"version":3,"sources":["components/UI/Buttons.js","views/Auth/SignUp/SingnUp.js"],"names":["ColorButton","withStyles","theme","root","padding","borderRadius","letterSpacing","textTransform","color","palette","getContrastText","grey","backgroundColor","Button","useStyles","makeStyles","paper","display","flexDirection","alignItems","avatar","margin","spacing","mb","marginBottom","textForm","width","borderBottomColor","borderColor","submit","textAlign","button","SignUp","classes","initialValues","email","password","name","phone","c_password","validate","values","errors","test","length","onSubmit","setSubmitting","setTimeout","alert","JSON","stringify","render","submitForm","isSubmitting","touched","className","maxWidth","component","variant","container","item","xs","sm","TextField","type","label","onClick","disabled"],"mappings":"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","file":"static/js/16.158121c0.chunk.js","sourcesContent":["// import React from 'react';\r\nimport { Button, withStyles } from '@material-ui/core';\r\nimport { grey   } from '@material-ui/core/colors';\r\n\r\nexport const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n        padding: '.8rem 2rem',\r\n        borderRadius: 0,\r\n        letterSpacing: '4px',\r\n        textTransform: 'uppercase',\r\n        color: theme.palette.getContrastText(grey[900]),\r\n        backgroundColor: grey[900],\r\n        '&:hover': {\r\n            backgroundColor: grey[800],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Box, Avatar, Typography\r\n} from '@material-ui/core';\r\nimport {\r\n  TextField\r\n} from 'formik-material-ui';\r\nimport { ColorButton } from '../../../components/UI/Buttons';\r\nimport { LockOutlined } from '@material-ui/icons';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#111111',\r\n  },\r\n  mb: {\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  textForm: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    '& label.Mui-focused': {\r\n      color: '#111111',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#111111',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: '#111111',\r\n      }\r\n    }\r\n  },\r\n  submit: {\r\n    textAlign: 'center',\r\n    \r\n  },\r\n  button:{\r\n    width:'100%'\r\n  }\r\n}));\r\n\r\n\r\nconst SignUp = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        password: '',\r\n        name: '',\r\n        phone: '',\r\n        c_password: ''\r\n      }}\r\n      validate={values => {\r\n        const errors = {};\r\n        // email\r\n        if (!values.email) {\r\n          errors.email = 'Required';\r\n        } else if (\r\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n        ) {\r\n          errors.email = 'Invalid email address';\r\n        }\r\n\r\n        // Password\r\n        if (!values.password) {\r\n          errors.password = 'Required';\r\n        } else if (\r\n          values.password.length < 8\r\n        ) {\r\n          errors.password = ' password should at least 8 chars';\r\n        }\r\n\r\n        // Name\r\n        if (!values.name) {\r\n          errors.name = 'Required';\r\n        }\r\n\r\n        // Phone\r\n        if (!values.phone) {\r\n          errors.phone = 'Required';\r\n        } else if (values.phone.length <= 11) {\r\n          errors.phone = 'Not a valid Phone Number';\r\n\r\n        }\r\n\r\n        // Confirm Password\r\n        if (!values.c_password) {\r\n          errors.c_password = 'Required';\r\n        } else if (values.password !== values.c_password) {\r\n          errors.c_password = \"Passwords don't match\";\r\n\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          setSubmitting(false);\r\n          alert(JSON.stringify(values, null, 2));\r\n        }, 500);\r\n      }}\r\n      render={({ submitForm, isSubmitting, touched, errors }) => (\r\n        <Container className='section' maxWidth=\"sm\">\r\n          <Form className={classes.paper}>\r\n            <div className={classes.mb}>\r\n              <Avatar className={classes.avatar}>\r\n                <LockOutlined />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign up\r\n        </Typography>\r\n            </div>\r\n\r\n\r\n            <Grid container >\r\n              <Grid item xs={12} sm={6}>\r\n                <Box margin={1}>\r\n                  <Field\r\n                    className={classes.textForm}\r\n                    component={TextField}\r\n                    variant=\"outlined\"\r\n                    name=\"name\"\r\n                    type=\"name\"\r\n                    label=\"Name\"\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Box margin={1}>\r\n                  <Field\r\n                    className={classes.textForm}\r\n                    component={TextField}\r\n                    variant=\"outlined\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} >\r\n                <Box margin={1}>\r\n                  <Field\r\n                    className={classes.textForm}\r\n                    component={TextField}\r\n                    variant=\"outlined\"\r\n                    name=\"phone\"\r\n                    type=\"phone\"\r\n                    label=\"Phone\"\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Box margin={1}>\r\n                  <Field\r\n                    className={classes.textForm}\r\n                    component={TextField}\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Box margin={1}>\r\n                  <Field\r\n                    className={classes.textForm}\r\n                    component={TextField}\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    label=\"Confirm Password\"\r\n                    name=\"c_password\"\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} >\r\n                {isSubmitting && <LinearProgress />}\r\n                <Box className={classes.submit} margin={1}>\r\n                  <ColorButton\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={submitForm}\r\n                    disabled={isSubmitting}\r\n                    className={classes.button}\r\n                  >\r\n                    Submit\r\n                  </ColorButton>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Form>\r\n        </Container>\r\n\r\n      )}\r\n    />\r\n  );\r\n}\r\nexport default SignUp\r\n\r\n\r\n"],"sourceRoot":""}